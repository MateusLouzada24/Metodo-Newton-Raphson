# -*- coding: utf-8 -*-
"""Metodo_Newton-Raphson.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GOG4XSLRBhCLcpMQvGpXoFfl-LFGr9-n
"""

# Mateus Dias Louzada - 136197
# Método: Newton-Raphson
# Neste exemplo, a função f(x) é a função para a qual queremos encontrar a raiz.
# Resumo:
# Em resumo, o método de Newton-Raphson é uma técnica poderosa e eficiente para encontrar raízes de funções,
# sendo amplamente utilizado em diversas áreas da matemática aplicada, engenharia e ciências naturais.
# No entanto, é importante ter cuidado ao escolher a aproximação inicial e ao verificar a convergência, especialmente em situações onde a função pode apresentar comportamento não linear ou singularidades.

def funcao(x):
    return x**2 - 4  # Exemplo de função: f(x) = x^2 - 4

def derivada_funcao(x):
    return 2 * x  # Derivada da função: f'(x) = 2 * x

def newton_raphson(f, df, x0, tolerancia, max_iter):
    iteracao = 0

    while iteracao < max_iter:
        iteracao += 1

        # Calcula o valor da função e sua derivada no ponto x0
        f_x0 = f(x0)
        df_x0 = df(x0)

        # Calcula a nova estimativa da raiz usando a fórmula de Newton-Raphson
        x1 = x0 - f_x0 / df_x0

        # Verifica se a tolerância foi atingida
        if abs(f(x1)) < tolerancia:
            return x1, iteracao

        # Atualiza x0 para x1
        x0 = x1

    # Se não convergir dentro do limite de iterações, informe que não foi encontrada uma raiz
    return None, iteracao

# Exemplo de uso:
aprox_inicial = 2.0  # Escolha uma aproximação inicial x0
tolerancia = 1e-6  # Defina um critério de parada, como uma tolerância para o valor de f(x)
max_iter = 100  # Defina um limite máximo de iterações

raiz_aproximada, num_iteracoes = newton_raphson(funcao, derivada_funcao, aprox_inicial, tolerancia, max_iter)

if raiz_aproximada is not None:
    print("Raiz aproximada:", raiz_aproximada)
    print("Número de iterações:", num_iteracoes)
else:
    print("Não foi encontrada uma raiz dentro do limite de iterações.")